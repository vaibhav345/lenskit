buildscript {
    repositories {
        maven {
            url "$project.testRepoURI"
        }
        mavenCentral()
    }
    dependencies {
        classpath 'org.hamcrest:hamcrest-library:1.3'
        classpath "org.lenskit:lenskit-gradle:$project.lenskitVersion"
    }
}


import groovy.json.JsonSlurper
import org.lenskit.gradle.*
import static org.hamcrest.MatcherAssert.*
import static org.hamcrest.Matchers.*

apply plugin: 'java'
apply plugin: 'lenskit'
apply from: 'common.gradle'

task simulate(type: Simulate) {
    input type: 'textfile', file: project.uri(ratingsFile).toString(), format: 'tsv'
    output "$buildDir/simulation.csv"
    extendedOutput "$buildDir/simulation.json"
    // 5-item outputs
    listSize 5
    // rebuild every 7 days
    rebuildPeriod 3600*24*7

    algorithm 'pers-mean.groovy'
}

task precheckSimulateOutputs {
    dependsOn simulate
    doLast {
        assertThat 'output file exists', simulate.outputFile?.exists()
        assertThat 'output file is nonempty', simulate.outputFile.length(), greaterThan(0L)
        assertThat 'extended output file exists', simulate.extendedOutputFile?.exists()
        assertThat 'extended output file is nonempty', simulate.extendedOutputFile.length(), greaterThan(0L)
    }
}

task validateRecLists {
    dependsOn simulate
    mustRunAfter precheckSimulateOutputs

    doLast {
        def slurp = new JsonSlurper()
        simulate.extendedOutputFile.eachLine { line, num ->
            def json = slurp.parseText(line)
            assertThat("line $num has at most 5 recs",
                       json.recommendations,
                       hasSize(lessThanOrEqualTo(5)))
            assertThat(json.modelAge, lessThanOrEqualTo(3600*24*7))
        }
    }
}

check {
    dependsOn precheckSimulateOutputs
    dependsOn validateRecLists
}
