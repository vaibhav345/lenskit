/*
 * Build system for LensKit, and open-source recommender systems toolkit.
 * Copyright 2010-2014 Regents of the University of Minnesota and contributors
 * Work on LensKit has been funded by the National Science Foundation under
 * grants IIS 05-34939, 08-08692, 08-12148, and 10-17697.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the
 *   distribution.
 *
 * - Neither the name of the University of Minnesota nor the names of
 *   its contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */


import org.gradle.process.internal.ExecException

apply from: "$rootDir/gradle/maven.gradle"
apply plugin: 'groovy'
apply from: "$rootDir/gradle/test-utils.gradle"

dependencies {
    compile project(':lenskit-all')
    compile group: 'net.sourceforge.argparse4j', name: 'argparse4j', version: '0.7.0'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.3'
    compile group: 'org.fusesource.jansi', name: 'jansi', version: '1.11'
    compileOnly group: 'com.google.auto.service', name: 'auto-service', version: '1.0-rc2'

    runtime group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.12'
    runtime group: 'org.webjars.npm', name: 'viz.js', version: '1.5.1'
}

meta {
    name 'LensKit CLI'
    description 'Command-line tools for interacting with LensKit.'
}

// Render the manpages
task renderManPages(group: 'documentation') {
    description "Renders the man pages with Pandoc."
    ext.manDir = 'src/man'
    ext.outputDir = "$buildDir/man"
    ext.filterScript = 'src/man/filter-manpage.py'
    inputs.files fileTree(manDir) {
        include '*.md'
    }
    inputs.file filterScript
    outputs.dir outputDir
    doLast {
        mkdir outputDir
        for (doc in inputs.sourceFiles.files) {
            def name = doc.name - '.md'
            try {
                exec {
                    executable 'pandoc'
                    args '-Mheader=LensKit'
                    args "-Mfooter=$version"
                    args '-F', file(filterScript)
                    args '-s', '-t', 'man'
                    args '-o', file("$outputDir/$name")
                    args doc
                }
            } catch (ExecException e) {
                logger.warn 'pandoc {}: {}', name, e
                logger.warn 'skipping man page build'
                throw new StopExecutionException("cannot run pandoc")
            }
        }
    }
}